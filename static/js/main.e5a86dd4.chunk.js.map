{"version":3,"sources":["components/jobBoardComponent.js","App.js","index.js"],"names":["jobBoardComponent","job","logo","company","location","postedAt","contract","isNew","position","featured","languages","tools","role","level","handleTagClick","tags","push","className","src","alt","map","tag","index","key","onClick","App","useState","jobs","setJobs","filters","setFilters","useEffect","data","addtag","includes","filteredJobs","filter","length","every","passedFilter","f","id","ReactDOM","render","document","getElementById"],"mappings":"m9FAoCeA,G,MAlCW,SAAC,GAAwI,IAAD,IAArIC,IAAOC,EAA8H,EAA9HA,KAAMC,EAAwH,EAAxHA,QAASC,EAA+G,EAA/GA,SAAUC,EAAqG,EAArGA,SAAUC,EAA2F,EAA3FA,SAAUC,EAAiF,EAAjFA,MAAOC,EAA0E,EAA1EA,SAAUC,EAAgE,EAAhEA,SAAUC,EAAsD,EAAtDA,UAAWC,EAA2C,EAA3CA,MAAOC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,MAASC,EAAqB,EAArBA,eACrIC,EAAO,CAACH,EAAMC,GAOpB,OANIH,GACFK,EAAKC,KAAL,MAAAD,EAAI,YAASL,IACXC,GACFI,EAAKC,KAAL,MAAAD,EAAI,YAASJ,IAIb,kBAAC,WAAD,KACE,yBAAKM,UAAS,qFAAgFR,EAAW,6BAA+B,GAA1H,2BACZ,6BACE,yBAAKS,IAAG,YAAOhB,EAAP,KAAgBe,UAAU,uDAAuDE,IAAKhB,KAEhG,yBAAKc,UAAU,iDACb,wBAAIA,UAAU,2BACXd,EACAI,GAAS,0BAAMU,UAAU,0FAAhB,OACTR,GAAY,0BAAMQ,UAAU,oFAAhB,aAEf,wBAAIA,UAAU,2BAA2BT,GACzC,uBAAGS,UAAU,iBACVZ,EADH,SACgBC,EADhB,UAC8BF,IAGhC,yBAAKa,UAAU,4HAEXF,GAASA,EAAKK,KAAI,SAACC,EAAKC,GAAN,OAAgB,0BAAMC,IAAKD,EAAOE,QAAS,WAAQV,EAAeO,IAAQJ,UAAU,kFAAmFI,W,OC+BtLI,MAxDf,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACNC,EADM,KACAC,EADA,OAEiBF,mBAAS,IAF1B,mBAENG,EAFM,KAEGC,EAFH,KAGbC,qBAAU,WACRH,EAAQI,KACP,IAEH,IAUMlB,EAAiB,SAACmB,GAClBJ,EAAQK,SAASD,IACrBH,EAAW,GAAD,mBAAKD,GAAL,CAAcI,MAEpBE,EAAeR,EAAKS,QAdP,SAAC,GAAuC,IAArCxB,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,MAAOF,EAAuB,EAAvBA,MAAOD,EAAgB,EAAhBA,UAClCK,EAAO,CAACH,EAAMC,GAKpB,OAJIH,GACFK,EAAKC,KAAL,MAAAD,EAAI,YAASL,IACXC,GACFI,EAAKC,KAAL,MAAAD,EAAI,YAASJ,IACQ,IAAnBkB,EAAQQ,QAELR,EAAQS,OAAM,SAAAF,GAAM,OAAIrB,EAAKmB,SAASE,SAe/C,OACE,kBAAC,WAAD,KACE,4BAAQnB,UAAU,sBAChB,yBAAKC,IAAI,iCAAiCC,IAAI,mBAEhD,yBAAKF,UAAU,oBAGXY,EAAQQ,OAAS,GACjB,yBAAKpB,UAAU,8IAEXY,EAAQT,KAAI,SAACgB,EAAQd,GAAT,OAAmB,0BAAMC,IAAKD,EAAOL,UAAU,mEAAoEmB,EAAhG,IAAwG,0BAAMZ,QAAS,kBAlBvIe,EAkB+JH,OAjBxLN,EAAWD,EAAQO,QAAO,SAAAI,GAAC,OAAIA,IAAMD,MADb,IAACA,GAkBwKtB,UAAU,2EAA1D,QAAxG,QAEjC,4BAAQO,QAjBG,WACnBM,EAAW,KAgB4Bb,UAAU,0BAAzC,UAKc,IAAhBU,EAAKU,OAAe,yCAClBF,EAAaf,KAAI,SAAAnB,GAAG,OAAI,kBAAC,EAAD,CAAmBa,eAAgBA,EAAgBS,IAAKtB,EAAIwC,GAAIxC,IAAKA,UChDzGyC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.e5a86dd4.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\r\n\r\nconst jobBoardComponent = ({ job: { logo, company, location, postedAt, contract, isNew, position, featured, languages, tools, role, level }, handleTagClick }) => {\r\n  const tags = [role, level];\r\n  if (languages)\r\n    tags.push(...languages)\r\n  if (tools)\r\n    tags.push(...tools)\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className={`flex flex-col align-items-center bg-white shadow-lg my-16 mx-6 p-6 rounded ${featured ? 'border-l-4 border-teal-500' : ''} lg:flex-row  lg:my-4 `} >\r\n        <div>\r\n          <img src={`./${logo} `} className=\"-mt-16 w-20 h-20 mb-4 lg:m-0 lg:w-24 lg:h-24 lg:mb-0\" alt={company} />\r\n        </div>\r\n        <div className=\"ml-4 flex flex-col flex-wrap justify-between \" >\r\n          <h3 className=\"font-bold text-teal-400\">\r\n            {company}\r\n            {isNew && <span className=\" m-2  py-1 px-2 font-bold  text-sm  rounded-full font-normal text-teal-500 bg-teal-100\">New</span>}\r\n            {featured && <span className=\" m-2  py-1 px-2 font-bold  text-sm font-normal  rounded-full text-white bg-black\" >Featured</span>}\r\n          </h3>\r\n          <h2 className=\"text-lg font-bold my-2 \">{position}</h2>\r\n          <p className=\"text-gray-600\">\r\n            {postedAt} · {contract} ·  {location}\r\n          </p>\r\n        </div>\r\n        <div className=\"flex flex-wrap items-center mt-4 mx-4 pt-4 border-t border-solid border-gray-400 lg:ml-auto lg:border-0 lg:pt-0 lg:mt-0 \">\r\n          {\r\n            tags && (tags.map((tag, index) => <span key={index} onClick={() => { handleTagClick(tag) }} className=\"  cursor-pointer py-1 mr-2 mb-4 px-3 rounded text-teal-500 bg-teal-100 lg:mb-0\" >{tag}</span>))\r\n          }\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default jobBoardComponent\r\n","import React, { Fragment, useEffect, useState } from 'react';\nimport './App.css';\nimport JobBoardComponent from './components/jobBoardComponent'\nimport data from './assets/data.json'\nfunction App() {\n  const [jobs, setJobs] = useState([]);\n  const [filters, setFilters] = useState([]);\n  useEffect(() => {\n    setJobs(data);\n  }, []);\n\n  const filterFunc = ({ role, level, tools, languages }) => {\n    const tags = [role, level];\n    if (languages)\n      tags.push(...languages)\n    if (tools)\n      tags.push(...tools);\n    if (filters.length === 0)\n      return true;\n    return filters.every(filter => tags.includes(filter));\n  }\n  const handleTagClick = (addtag) => {\n    if (filters.includes(addtag)) return;\n    setFilters([...filters, addtag]);\n  }\n  const filteredJobs = jobs.filter(filterFunc);\n\n  const handleFilterClick = (passedFilter) => {\n    setFilters(filters.filter(f => f !== passedFilter));\n  }\n  const clearFilters = () => {\n    setFilters([]);\n  }\n\n  return (\n    <Fragment>\n      <header className=\"bg-teal-500  mb-12\">\n        <img src=\"./images/bg-header-desktop.svg\" alt=\"bg-img-header\" />\n      </header>\n      <div className=\"container m-auto\">\n\n        {\n          filters.length > 0 &&\n          <div className='flex flex-wrap inline-block cursor-pointer align-items-center bg-white shadow-lg  -my-20 mb-10 relative z-10 mx-6 p-6 rounded lg:flex-row '>\n            {\n              filters.map((filter, index) => <span key={index} className=\" mr-2  mb-3 pl-3 pr-0 rounded text-teal-500 bg-teal-100 lg:mb-0\" >{filter} <span onClick={() => handleFilterClick(filter)} className=\"text-white rounded py-1 px-2 text-xl self-center font-bold  bg-teal-500\">×</span> </span>)\n            }\n            <button onClick={clearFilters} className=\"ml-auto  text-gray-600\">Clear</button>\n          </div>\n        }\n\n        {\n          jobs.length === 0 ? <p>Loading...</p> : (\n            filteredJobs.map(job => <JobBoardComponent handleTagClick={handleTagClick} key={job.id} job={job} />)\n          )\n        }\n      </div>\n    </Fragment>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}